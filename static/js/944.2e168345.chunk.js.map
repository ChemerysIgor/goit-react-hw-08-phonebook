{"version":3,"file":"static/js/944.2e168345.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactFormStyled.js","components/ContactForm/ContactForm.jsx","components/Contact/ContactStyled.js","components/Contact/Contact.jsx","components/ContactList/contactListStyled.js","components/ContactList/ContactList.jsx","components/Filter/FilterStyled.js","components/Filter/Filter.jsx","pages/Contacts/ContactStyled.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts;\n\nexport const selectFilteredContacts = state => {\n  const contacts = state.contacts.items;\n  const filter = state.filter.val;\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter)\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactsForm = styled.form`\n  display: flex;\n\n  flex-direction: column;\n  background-color: #fff;\n  padding: 15px;\n  gap: 15px;\n  width: 400px;\n  //   align-items: center;\n  border-radius: 15px;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n`;\n\nexport const FormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  font-size: 24px;\n  font-weight: 500;\n`;\n\nexport const StyledField = styled.input`\n  border-radius: 15px;\n  outline: none;\n  padding: 2px 10px;\n  border: none;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n  background-color: #e0e0e0;\n  :hover,\n  :focus {\n    outline: 2px solid #60b8ff;\n  }\n  @media screen and (max-width: 450px) {\n    max-width: 250px;\n  }\n`;\nexport const Div = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const SubmitButton = styled.button`\n  width: 50%;\n\n  text-decoration: none;\n  text-align: center;\n  color: #ffffff;\n  font-weight: 700;\n  font-size: 24px;\n  background-color: #60b8ff;\n  padding: 5px;\n  border-radius: 15px;\n  border: none;\n  outline: none;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n  :hover,\n  :focus {\n    background-color: #ec4d1c;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { ContactsForm, FormLabel, StyledField, SubmitButton, Div } from './ContactFormStyled';\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectFilteredContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = e.target.elements;\n    if (\n      contacts.length > 0 &&\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.value.toLowerCase()\n      )\n    ) {\n      alert(`${name.value} is already in contacts.`);\n    } else {\n      dispatch(addContact({ name: name.value, number: number.value }));\n      e.target.reset();\n    }\n  };\n\n  return (\n    <ContactsForm onSubmit={handleSubmit}>\n      <FormLabel htmlFor=\"name\">\n        Name\n        <StyledField\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </FormLabel>\n      <FormLabel htmlFor=\"number\">\n        Number\n        <StyledField\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </FormLabel>\n      <Div>\n      <SubmitButton type=\"submit\">Add contact</SubmitButton>\n      </Div>\n    </ContactsForm>\n  );\n};\n","import styled from 'styled-components';\n\nexport const UserData = styled.p`\ndisplay: flex;\nmargin: 0px\n  justify-content: center;\n  align-items: center;\nfont-size: 20px;\n  font-weight: 500;\n     @media screen and (min-width: 450px) {\n     font-size: 20px;\n  font-weight: 500;`;\n\nexport const DeleteBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 85px;\n  height: 35px;\n  border-radius: 5px;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n  border: none;\n  outline: none;\n  :hover,\n  :focus {\n    background-color: #ec4d1c;\n    color: white;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { UserData, DeleteBtn } from './ContactStyled';\nexport const Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <UserData>{contact.name.toUpperCase()}</UserData>\n      <UserData>{contact.number}</UserData>\n      <DeleteBtn onClick={() => dispatch(deleteContact(contact.id))}>\n        Delete contact\n      </DeleteBtn>\n    </>\n  );\n};\n\nContact.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\nwidth: 400px;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\nbackground-color: #fff;\nborder-radius: 15px;\nlist-style: none\n \n}\n`;\n\nexport const ContactCard = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 5px 10px;\n  font-size: 20px;\n  font-weight: 500;\n  background-color: #e0e0e0;\n  border-radius: 15px;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n`;\n","import { Contact } from 'components/Contact/Contact';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport {\n  selectFilteredContacts,\n  selectContacts,\n} from 'redux/contacts/selectors';\nimport { List, ContactCard } from './contactListStyled';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const { isLoading, error } = useSelector(selectContacts);\n  const contacts = useSelector(selectFilteredContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <List>\n        {contacts.map(contact => {\n          return (\n            <ContactCard key={contact.id}>\n              <Contact contact={contact}></Contact>\n            </ContactCard>\n          );\n        })}\n      </List>\n      {isLoading && <b>Loading...</b>}\n      {error && <b>{error}</b>}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  font-size: 24px;\n  font-weight: 500;\n  width: 400px;\n`;\n\nexport const FilterField = styled.input`\n  border-radius: 15px;\n  outline: none;\n  padding: 2px 10px;\n  border: none;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n  background-color: #e0e0e0;\n  :hover,\n  :focus {\n    outline: 2px solid #60b8ff;\n  }\n  @media screen and (max-width: 450px) {\n    max-width: 250px;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { FilterField,FilterLabel } from './FilterStyled';\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    e.preventDefault();\n    const val = e.target.value.toLowerCase();\n    dispatch(setFilter(val));\n  };\n\n  return (\n    <FilterLabel htmlFor=\"filter\">\n      Find contacts by name\n      <FilterField\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$}\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        onChange={handleChange}\n      />\n    </FilterLabel>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin: auto;\n  display: flex;\n  flex-direction: column;\n\n  align-items: center;\n`;\n","import { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { Filter } from '../../components/Filter/Filter';\nimport { Helmet } from 'react-helmet-async';\nimport { Container } from './ContactStyled';\n\nexport default function Contacts() {\n  return (\n    <Container>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n      <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n    </Container>\n  );\n}\n"],"names":["selectContacts","state","contacts","selectFilteredContacts","items","filter","val","contact","name","toLowerCase","includes","ContactsForm","styled","FormLabel","StyledField","Div","SubmitButton","ContactForm","dispatch","useDispatch","useSelector","onSubmit","e","preventDefault","target","elements","number","length","find","value","alert","addContact","reset","htmlFor","type","pattern","title","required","UserData","DeleteBtn","Contact","toUpperCase","onClick","deleteContact","id","List","ContactCard","ContactList","isLoading","error","useEffect","fetchContacts","map","FilterLabel","FilterField","Filter","onChange","setFilter","Container","Contacts","Suspense","fallback"],"sourceRoot":""}